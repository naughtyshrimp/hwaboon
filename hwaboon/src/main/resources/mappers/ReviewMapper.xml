<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ReviewMapper">

   <!-- DB컬럼과 VO필드명이 다른 경우 처리 방법 -->
   <resultMap id="ReviewResultMap"  type="ReviewVO">
      <id property="reviewNo" column="review_no" />
      <result property="title" column="title" />
      <result property="content" column="content" />
      <result property="writer" column="writer" />
      <result property="regDate" column="reg_date" />
      <result property="viewCnt" column="view_cnt" />
      <result property="likeCnt" column="like_cnt" />
   </resultMap>
   
   <!-- 단일 게시물 조회 -->
   <select id="getArticle" resultMap="ReviewResultMap">
      SELECT * from mvc_review 
      WHERE review_no=#{reviewNo}
   </select>
   
     <!-- 모든 게시물 조회 -->
   <select id="getAllArticle" resultMap="ReviewResultMap">
      <![CDATA[
      SELECT * from mvc_review 
      WHERE review_no > 0 
      ORDER BY review_no DESC
      ]]>
   </select>
   
   <!-- 게시물 페이징 조회 -->
   <select id="listPaging" resultMap="ReviewResultMap">
   	SELECT * FROM mvc_review 
   	ORDER BY review_no DESC 
   	LIMIT #{pageStart}, #{countPerPage}
   
   </select>
   <!-- 게시글 총 갯수 조회  -->
   <select id="countArticles" resultType="int">
   	SELECT COUNT(review_no) 
   	FROM mvc_review
   </select>
   
   <!-- 게시물 등록  쿼리-->
   <insert id="insert">
      INSERT INTO mvc_review (title, content, writer) 
      VALUES (#{title},#{content},#{writer})
   </insert>
   
   <!-- 게시물 수정  쿼리-->
   <update id="update">
      UPDATE mvc_review 
      SET title=#{title}, content=#{content} 
      WHERE review_no=#{reviewNo}
   </update>
   
   <!-- 게시물 삭제  쿼리-->
   <delete id="delete">
      DELETE FROM mvc_review 
      WHERE review_no=#{reviewNo}
   </delete>
   
    <!-- 검색된 게시물 수 조회처리 -->
    <select id="countSearchArticles" resultType="int">
    	SELECT COUNT(*) 
		FROM mvc_review 
		<include refid="search" />
    </select>
    
    <!-- 검색된 게시물 목록 조회처리 -->
    <select id="listSearch" resultMap="ReviewResultMap">
    	
    	SELECT * 
    	FROM mvc_review     	
    	<include refid="search" />     	    	    	
    	ORDER BY review_no DESC 
    	LIMIT #{pageStart}, #{countPerPage}
    	
    </select>
    
    <!-- 중복되는 동적 SQL구문 처리 -->
    <sql id="search">
     	<if test="condition != ''">
	    	<!-- 동적 SQL구문 -->
	    	<if test="condition == 'title'">
	    	WHERE title LIKE CONCAT('%', #{keyword}, '%') 
	    	</if>
	    	<if test="condition == 'writer'">
	    	WHERE writer LIKE CONCAT('%', #{keyword}, '%') 
	    	</if>
	    	<if test="condition == 'content'">
	    	WHERE content LIKE CONCAT('%', #{keyword}, '%') 
	    	</if>
	    	<if test="condition == 'titleContent'">
	    	WHERE title LIKE CONCAT('%', #{keyword}, '%') 
            OR content LIKE CONCAT('%', #{keyword}, '%')
	    	</if>
	    	
	    </if>
    </sql>
    
     <!-- 조회수 상승 SQL -->
    <update id="updateViewCnt">
    	UPDATE mvc_review 
    	SET view_cnt = view_cnt + 1 
    	WHERE review_no = #{reviewNo}
    </update>
   
   </mapper>