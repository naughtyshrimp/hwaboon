<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	
<mapper namespace="com.hwaboon.myapp.user.repository.IUserDAO">
    
    <!-- UserResultMap 설정 -->
    <resultMap type="com.hwaboon.myapp.user.model.UserVO" id="UserResultMap">
    	<id property="userId" column="user_id"/>
    	<result property="userPw" column="user_pw"/>
    	<result property="userName" column="user_name"/>
    	<result property="userEmail" column="user_email"/>
        <result property="userRegDate" column="user_reg_date" />        
        <result property="sessionId" column="session_id" />        
        <result property="sessionLimit" column="session_limit" /> 
    </resultMap>
    
    <!-- ////////////// 회원가입 /////////////// -->
    <!-- 회원 등록 SQL -->
    <insert id="join">
    	insert into user(user_id, user_pw, user_name, user_email) values(#{userId}, #{userPw}, #{userName}, #{userEmail})
    </insert>
    
    <!-- 아이디 중복 확인 SQL -->
    <select id="isDuplicateId" resultType="int">
    	select count(*) from user where user_id=#{userId}
    </select>
    
    <!-- 이메일 중복 확인 SQL -->
    <select id="isDuplicateEmail" resultType="int">
    	select count(*) from user where user_email=#{userEmail}
    </select>
    
    
    
    
	<!-- ////////////// 로그인  /////////////// -->
	<!-- 로그인을 시도한 아이디의 전체 회원정보 조회 SQL -->
	<select id="login" resultMap="UserResultMap">
		select * from user where user_id=#{userId}
	</select>
	
	<!-- 로그인 유지를 체크할 경우 세션 아이디와 로그인 유지 시간을 갱신 -->
	<update id="keepLogin">
		update user set session_id=#{sessionId}, session_limit=#{sessionLimit} where user_id=#{userId}
	</update>
	
	<!-- 자동로그인을 사용한 방문자가 재방문했을 시 로그인 쿠키의 세션아이디와 일치하는 회원의 정보를 불러옴 -->
	<select id="getUserWithSessionId" resultMap="UserResultMap">
		select * from user where session_id=#{sessionId}
	</select>
	
	<!-- 아이디 찾기 SQL -->
	<select id="findId" resultType="String">
		select user_id from user where user_email=#{userEmail}
	</select>
	
	
	
	
	
	
	<!-- ////////////////// 마이페이지 ////////////////// -->
	<!-- 회원정보 변경 SQL -->
	<update id="updateInfo">
		update user set user_name=#{userName}, user_email=#{userEmail} where user_id=#{userId}
	</update>
	
	<!-- 비밀번호 변경 SQL -->
	<update id="updatePw">
		update user set user_pw=#{userPw} where user_id=#{userId}
	</update>
	
	
	<!-- 회원 탈퇴 SQL -->
	<delete id="withdrawal">
		delete from user where user_id=#{userId}
	</delete>
	


</mapper>